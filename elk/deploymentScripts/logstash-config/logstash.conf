input {
  lumberjack {
    port => 9000
    ssl_certificate => "/etc/elk/keys/server-cert.pem"
    ssl_key => "/etc/elk/keys/server-private-key-nopassphrase.pem"
    codec => "json"
  }
}

output {
   elasticsearch {
     hosts => "localhost"
   }
}

filter {
  if [logFormat] == "logStandardFormat" {  
    grok {
      match => ["message", "%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{WORD:application}%{SPACE}%{LOGLEVEL:severity}%{SPACE}%{GREEDYDATA:log_data}"]
    }
  }
  if [logFormat] == "nginxLogFormat" {
    grok {
      match => ["message", "%{DATESTAMP:timestamp}%{SPACE}\[%{LOGLEVEL:severity}\]%{SPACE}%{GREEDYDATA:log_data}"]
    }
  }
  if [logFormat] == "pgpoolLogFormat" {    
    grok {
      match => ["message", "%{TIMESTAMP_ISO8601:timestamp}:%{DATA}:%{SPACE}%{WORD:severity}%{GREEDYDATA:log_data}"]
    }
  }
  if [logFormat] == "postgresLogFormat" {
    grok {
      match => ["message", "\<%{SPACE}%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{DATA}%{SPACE}\>%{WORD:severity}:%{GREEDYDATA:log_data}"]
    }
  }
  if [logFormat] == "etcdLogFormat" {
    grok {
      match => ["message", "\[%{WORD:application}\]%{SPACE}%{SYSLOGTIMESTAMP:timestamp}%{SPACE}%{WORD:severity}%{SPACE}%{GREEDYDATA:log_data}"]
    }
  }
  if [logFormat] == "srdLogFormat" {
    grok {
      match => ["message", "\[%{TIMESTAMP_ISO8601:timestamp}%{DATA}\]%{SPACE}%{LOGLEVEL:severity}%{SPACE}\-\-%{SPACE}%{WORD:application}\:\:%{GREEDYDATA:log_data}"]
    }
  }
  if [logFormat] == "zookeeperLogFormat" {
    grok {
      match => ["message", "%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{DATA}%{SPACE}%{LOGLEVEL:severity}%{SPACE}%{GREEDYDATA:log_data}"]
    }
  } 

  if [logFormat] == "ndvrAdpaterLogFormat" {
    grok {
      match => ["message", "^%{TIMESTAMP_ISO8601:timestamp}"]
    }
  }

  if [logFormat] == "advisorLogFormat" {
    grok {
      match => ["message", "%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{WORD:severity}%{SPACE}%{GREEDYDATA:log_data}"]
    }
  }

  if [logFormat] == "codeControllerLogFormat" {
    grok {
      match => ["message", "%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{DATA}%{SPACE}%{LOGLEVEL:severity}%{SPACE}%{GREEDYDATA:log_data}"]
    }
  }

  mutate {
    remove_field => ["host"]
    remove_field => ["logFormat"]
    remove_tag => ["_grokparsefailure"]
  }
}
